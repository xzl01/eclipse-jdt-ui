Source: eclipse-jdt-ui
Section: java
Priority: optional
Maintainer: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders: Emmanuel Bourg <ebourg@apache.org>
Build-Depends:
 debhelper-compat (= 13),
 default-jdk (>= 2:1.11),
 ant,
 junit,
 junit4,
 libeclipse-compare-java,
 libeclipse-compare-core-java,
 libeclipse-core-commands-java,
 libeclipse-core-contenttype-java,
 libeclipse-core-expressions-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-filesystem-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java (>= 3.16),
 libeclipse-core-runtime-java,
 libeclipse-core-variables-java,
 libeclipse-debug-core-java,
 libeclipse-debug-ui-java,
 libeclipse-help-java,
 libeclipse-jdt-core-java (>= 3.32),
 libeclipse-jdt-launching-java (>= 3.11),
 libeclipse-jface-java (>= 3.14),
 libeclipse-jface-text-java (>= 3.20),
 libeclipse-search-java,
 libeclipse-team-core-java,
 libeclipse-team-ui-java,
 libeclipse-text-java (>= 3.8),
 libeclipse-ui-console-java,
 libeclipse-ui-editors-java,
 libeclipse-ui-forms-java,
 libeclipse-ui-ide-java (>= 3.15),
 libeclipse-ui-navigator-java,
 libeclipse-ui-views-java,
 libeclipse-ui-workbench-java,
 libeclipse-ui-workbench-texteditor-java,
 libequinox-bidi-java,
 libequinox-common-java,
 libequinox-frameworkadmin-java,
 libequinox-preferences-java,
 libequinox-registry-java,
 libequinox-simpleconfigurator-manipulator-java,
 libicu4j-java,
 libswt-gtk-4-java,
 eclipse-debian-helper
Standards-Version: 4.6.2
Vcs-Git: https://salsa.debian.org/java-team/eclipse-jdt-ui.git
Vcs-Browser: https://salsa.debian.org/java-team/eclipse-jdt-ui
Homepage: https://www.eclipse.org/jdt/ui/

Package: libeclipse-jdt-astview-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-core-commands-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-resources-java,
 libeclipse-core-runtime-java,
 libeclipse-jdt-core-java (>= 3.15),
 libeclipse-jface-java,
 libeclipse-jface-text-java,
 libeclipse-text-java,
 libeclipse-ui-editors-java,
 libeclipse-ui-workbench-java,
 libeclipse-ui-workbench-texteditor-java,
 libequinox-common-java,
 libequinox-registry-java,
 libswt-gtk-4-java
Description: Eclipse AST View Plug-in
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.astview bundle.

Package: libeclipse-jdt-core-manipulation-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-core-contenttype-java,
 libeclipse-core-expressions-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-filesystem-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java,
 libeclipse-core-runtime-java,
 libeclipse-jdt-core-java (>= 3.32),
 libeclipse-jdt-launching-java,
 libeclipse-text-java (>= 3.8),
 libequinox-common-java,
 libequinox-preferences-java,
 libicu4j-java
Description: Eclipse Java Code Manipulation Functionality
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.core.manipulation bundle.

Package: libeclipse-jdt-junit-core-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-core-expressions-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java,
 libeclipse-core-runtime-java,
 libeclipse-debug-core-java,
 libeclipse-jdt-core-java,
 libeclipse-jdt-launching-java (>= 3.11),
 libequinox-common-java,
 libequinox-frameworkadmin-java,
 libequinox-preferences-java,
 libequinox-registry-java,
 libequinox-simpleconfigurator-manipulator-java
Description: Eclipse Java Development Tools JUnit core support
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.junit.core bundle.

Package: libeclipse-jdt-junit-runtime-java
Architecture: all
Depends: ${misc:Depends}, ${bundle:Depends}, junit
Description: Eclipse Java Development Tools JUnit Runtime Support
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.junit.runtime bundle.

Package: libeclipse-jdt-junit4-runtime-java
Architecture: all
Depends: ${misc:Depends}, ${bundle:Depends}, junit4
Description: Eclipse Java Development Tools JUnit4 Runtime Support
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.junit4.runtime bundle.

Package: libeclipse-jdt-ui-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-compare-java,
 libeclipse-compare-core-java,
 libeclipse-core-commands-java,
 libeclipse-core-contenttype-java,
 libeclipse-core-expressions-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-filesystem-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java,
 libeclipse-core-runtime-java,
 libeclipse-core-variables-java,
 libeclipse-debug-core-java,
 libeclipse-debug-ui-java,
 libeclipse-help-java,
 libeclipse-jdt-core-java (>= 3.16),
 libeclipse-jdt-launching-java (>= 3.11),
 libeclipse-jface-java (>= 3.14),
 libeclipse-jface-text-java (>= 3.20),
 libeclipse-search-java,
 libeclipse-team-core-java,
 libeclipse-team-ui-java,
 libeclipse-text-java,
 libeclipse-ui-console-java,
 libeclipse-ui-editors-java,
 libeclipse-ui-forms-java,
 libeclipse-ui-ide-java (>= 3.15),
 libeclipse-ui-navigator-java,
 libeclipse-ui-views-java,
 libeclipse-ui-workbench-java,
 libeclipse-ui-workbench-texteditor-java,
 libequinox-bidi-java,
 libequinox-common-java,
 libequinox-preferences-java,
 libequinox-registry-java,
 libicu4j-java,
 libswt-gtk-4-java,
Description: Eclipse Java Development Tools UI
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.jdt.ui bundle.

Package: libeclipse-ltk-core-refactoring-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-core-commands-java,
 libeclipse-core-expressions-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-filesystem-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java (>= 3.16),
 libeclipse-core-runtime-java,
 libeclipse-text-java,
 libequinox-common-java,
 libequinox-preferences-java,
 libequinox-registry-java,
 libicu4j-java
Description: Eclipse Refactoring Core
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.ltk.core.refactoring bundle.

Package: libeclipse-ltk-ui-refactoring-java
Architecture: all
Depends:
 ${misc:Depends},
 ${bundle:Depends},
 libeclipse-compare-java,
 libeclipse-core-commands-java,
 libeclipse-core-expressions-java,
 libeclipse-core-filebuffers-java,
 libeclipse-core-filesystem-java,
 libeclipse-core-jobs-java,
 libeclipse-core-resources-java,
 libeclipse-core-runtime-java,
 libeclipse-jface-java (>= 3.14),
 libeclipse-jface-text-java,
 libeclipse-team-core-java,
 libeclipse-team-ui-java,
 libeclipse-text-java,
 libeclipse-ui-navigator-java,
 libeclipse-ui-workbench-java,
 libequinox-common-java,
 libequinox-preferences-java,
 libequinox-registry-java,
 libicu4j-java,
 libswt-gtk-4-java
Description: Eclipse Refactoring UI
 Eclipse JDT UI implements the user interface for the Java IDE. It provides
 several workbench contributions for viewing and manipulating Java code:
  * Package Explorer View - shows the Java element tree as defined
    by a project's build class path
  * Type Hierarchy View - shows the sub- and supertype hierarchies
  * Java Outline View - shows the structure of a Java compilation unit
    or class file
  * Java Browsing Perspecitve - allows navigating the Java model using
    separate views for projects, packages, types and members.
  * Wizards for creating Java elements - Java project, package, class,
    interface
  * Java Editor - syntax coloring, content specific code assist, code
    resolve, method level edit, import assistance, quick fix and quick
    assist
 .
 In addition to these workbench elements the following functions are provided:
  * Refactoring support - Extract Method, Safe Rename and Moving with
    reference updates, Self Encapsulate Field etc.
  * Java searching - find declarations of and/or references to packages,
    types, methods, and fields, scoped to the workspace, a working set,
    or the current selection.
  * Java aware structured compare - determine and present changes to
    individual Java methods. It supports to replace individual Java elements
    with a version of an element from the local history.
 .
 This package contains the org.eclipse.ltk.ui.refactoring bundle.
